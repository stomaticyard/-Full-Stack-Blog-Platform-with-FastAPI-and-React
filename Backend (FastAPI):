from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
import uvicorn
from typing import List

app = FastAPI()

class BlogPost(BaseModel):
    id: int
    title: str
    content: str
    author: str

db = []

@app.get("/posts", response_model=List[BlogPost])
async def get_posts():
    return db

@app.post("/posts", response_model=BlogPost)
async def create_post(post: BlogPost):
    db.append(post)
    return post

@app.put("/posts/{post_id}", response_model=BlogPost)
async def update_post(post_id: int, updated_post: BlogPost):
    for i, post in enumerate(db):
        if post.id == post_id:
            db[i] = updated_post
            return updated_post
    raise HTTPException(status_code=404, detail="Post not found")

@app.delete("/posts/{post_id}")
async def delete_post(post_id: int):
    global db
    db = [post for post in db if post.id != post_id]
    return {"message": "Post deleted"}

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)
